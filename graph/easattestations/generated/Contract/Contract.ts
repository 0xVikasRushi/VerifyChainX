// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Attested extends ethereum.Event {
  get params(): Attested__Params {
    return new Attested__Params(this);
  }
}

export class Attested__Params {
  _event: Attested;

  constructor(event: Attested) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attester(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uid(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get schema(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class Revoked extends ethereum.Event {
  get params(): Revoked__Params {
    return new Revoked__Params(this);
  }
}

export class Revoked__Params {
  _event: Revoked;

  constructor(event: Revoked) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get attester(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uid(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get schema(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RevokedOffchain extends ethereum.Event {
  get params(): RevokedOffchain__Params {
    return new RevokedOffchain__Params(this);
  }
}

export class RevokedOffchain__Params {
  _event: RevokedOffchain;

  constructor(event: RevokedOffchain) {
    this._event = event;
  }

  get revoker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Timestamped extends ethereum.Event {
  get params(): Timestamped__Params {
    return new Timestamped__Params(this);
  }
}

export class Timestamped__Params {
  _event: Timestamped;

  constructor(event: Timestamped) {
    this._event = event;
  }

  get data(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract__getAttestationResultValue0Struct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get schema(): Bytes {
    return this[1].toBytes();
  }

  get time(): BigInt {
    return this[2].toBigInt();
  }

  get expirationTime(): BigInt {
    return this[3].toBigInt();
  }

  get revocationTime(): BigInt {
    return this[4].toBigInt();
  }

  get refUID(): Bytes {
    return this[5].toBytes();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get attester(): Address {
    return this[7].toAddress();
  }

  get revocable(): boolean {
    return this[8].toBoolean();
  }

  get data(): Bytes {
    return this[9].toBytes();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  VERSION(): string {
    let result = super.call("VERSION", "VERSION():(string)", []);

    return result[0].toString();
  }

  try_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall("VERSION", "VERSION():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAttestTypeHash(): Bytes {
    let result = super.call(
      "getAttestTypeHash",
      "getAttestTypeHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getAttestTypeHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getAttestTypeHash",
      "getAttestTypeHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAttestation(uid: Bytes): Contract__getAttestationResultValue0Struct {
    let result = super.call(
      "getAttestation",
      "getAttestation(bytes32):((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
      [ethereum.Value.fromFixedBytes(uid)]
    );

    return changetype<Contract__getAttestationResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAttestation(
    uid: Bytes
  ): ethereum.CallResult<Contract__getAttestationResultValue0Struct> {
    let result = super.tryCall(
      "getAttestation",
      "getAttestation(bytes32):((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))",
      [ethereum.Value.fromFixedBytes(uid)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__getAttestationResultValue0Struct>(value[0].toTuple())
    );
  }

  getDomainSeparator(): Bytes {
    let result = super.call(
      "getDomainSeparator",
      "getDomainSeparator():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getDomainSeparator(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getDomainSeparator",
      "getDomainSeparator():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getNonce(account: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRevokeOffchain(revoker: Address, data: Bytes): BigInt {
    let result = super.call(
      "getRevokeOffchain",
      "getRevokeOffchain(address,bytes32):(uint64)",
      [ethereum.Value.fromAddress(revoker), ethereum.Value.fromFixedBytes(data)]
    );

    return result[0].toBigInt();
  }

  try_getRevokeOffchain(
    revoker: Address,
    data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRevokeOffchain",
      "getRevokeOffchain(address,bytes32):(uint64)",
      [ethereum.Value.fromAddress(revoker), ethereum.Value.fromFixedBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRevokeTypeHash(): Bytes {
    let result = super.call(
      "getRevokeTypeHash",
      "getRevokeTypeHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getRevokeTypeHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRevokeTypeHash",
      "getRevokeTypeHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSchemaRegistry(): Address {
    let result = super.call(
      "getSchemaRegistry",
      "getSchemaRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSchemaRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSchemaRegistry",
      "getSchemaRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTimestamp(data: Bytes): BigInt {
    let result = super.call("getTimestamp", "getTimestamp(bytes32):(uint64)", [
      ethereum.Value.fromFixedBytes(data)
    ]);

    return result[0].toBigInt();
  }

  try_getTimestamp(data: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTimestamp",
      "getTimestamp(bytes32):(uint64)",
      [ethereum.Value.fromFixedBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isAttestationValid(uid: Bytes): boolean {
    let result = super.call(
      "isAttestationValid",
      "isAttestationValid(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(uid)]
    );

    return result[0].toBoolean();
  }

  try_isAttestationValid(uid: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAttestationValid",
      "isAttestationValid(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(uid)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  multiRevokeOffchain(data: Array<Bytes>): BigInt {
    let result = super.call(
      "multiRevokeOffchain",
      "multiRevokeOffchain(bytes32[]):(uint64)",
      [ethereum.Value.fromFixedBytesArray(data)]
    );

    return result[0].toBigInt();
  }

  try_multiRevokeOffchain(data: Array<Bytes>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "multiRevokeOffchain",
      "multiRevokeOffchain(bytes32[]):(uint64)",
      [ethereum.Value.fromFixedBytesArray(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  multiTimestamp(data: Array<Bytes>): BigInt {
    let result = super.call(
      "multiTimestamp",
      "multiTimestamp(bytes32[]):(uint64)",
      [ethereum.Value.fromFixedBytesArray(data)]
    );

    return result[0].toBigInt();
  }

  try_multiTimestamp(data: Array<Bytes>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "multiTimestamp",
      "multiTimestamp(bytes32[]):(uint64)",
      [ethereum.Value.fromFixedBytesArray(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  revokeOffchain(data: Bytes): BigInt {
    let result = super.call(
      "revokeOffchain",
      "revokeOffchain(bytes32):(uint64)",
      [ethereum.Value.fromFixedBytes(data)]
    );

    return result[0].toBigInt();
  }

  try_revokeOffchain(data: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "revokeOffchain",
      "revokeOffchain(bytes32):(uint64)",
      [ethereum.Value.fromFixedBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  timestamp(data: Bytes): BigInt {
    let result = super.call("timestamp", "timestamp(bytes32):(uint64)", [
      ethereum.Value.fromFixedBytes(data)
    ]);

    return result[0].toBigInt();
  }

  try_timestamp(data: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timestamp", "timestamp(bytes32):(uint64)", [
      ethereum.Value.fromFixedBytes(data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AttestCall extends ethereum.Call {
  get inputs(): AttestCall__Inputs {
    return new AttestCall__Inputs(this);
  }

  get outputs(): AttestCall__Outputs {
    return new AttestCall__Outputs(this);
  }
}

export class AttestCall__Inputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get request(): AttestCallRequestStruct {
    return changetype<AttestCallRequestStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AttestCall__Outputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class AttestCallRequestStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): AttestCallRequestDataStruct {
    return changetype<AttestCallRequestDataStruct>(this[1].toTuple());
  }
}

export class AttestCallRequestDataStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get expirationTime(): BigInt {
    return this[1].toBigInt();
  }

  get revocable(): boolean {
    return this[2].toBoolean();
  }

  get refUID(): Bytes {
    return this[3].toBytes();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }

  get value(): BigInt {
    return this[5].toBigInt();
  }
}

export class AttestByDelegationCall extends ethereum.Call {
  get inputs(): AttestByDelegationCall__Inputs {
    return new AttestByDelegationCall__Inputs(this);
  }

  get outputs(): AttestByDelegationCall__Outputs {
    return new AttestByDelegationCall__Outputs(this);
  }
}

export class AttestByDelegationCall__Inputs {
  _call: AttestByDelegationCall;

  constructor(call: AttestByDelegationCall) {
    this._call = call;
  }

  get delegatedRequest(): AttestByDelegationCallDelegatedRequestStruct {
    return changetype<AttestByDelegationCallDelegatedRequestStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class AttestByDelegationCall__Outputs {
  _call: AttestByDelegationCall;

  constructor(call: AttestByDelegationCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class AttestByDelegationCallDelegatedRequestStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): AttestByDelegationCallDelegatedRequestDataStruct {
    return changetype<AttestByDelegationCallDelegatedRequestDataStruct>(
      this[1].toTuple()
    );
  }

  get signature(): AttestByDelegationCallDelegatedRequestSignatureStruct {
    return changetype<AttestByDelegationCallDelegatedRequestSignatureStruct>(
      this[2].toTuple()
    );
  }

  get attester(): Address {
    return this[3].toAddress();
  }
}

export class AttestByDelegationCallDelegatedRequestDataStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get expirationTime(): BigInt {
    return this[1].toBigInt();
  }

  get revocable(): boolean {
    return this[2].toBoolean();
  }

  get refUID(): Bytes {
    return this[3].toBytes();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }

  get value(): BigInt {
    return this[5].toBigInt();
  }
}

export class AttestByDelegationCallDelegatedRequestSignatureStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }
}

export class MultiAttestCall extends ethereum.Call {
  get inputs(): MultiAttestCall__Inputs {
    return new MultiAttestCall__Inputs(this);
  }

  get outputs(): MultiAttestCall__Outputs {
    return new MultiAttestCall__Outputs(this);
  }
}

export class MultiAttestCall__Inputs {
  _call: MultiAttestCall;

  constructor(call: MultiAttestCall) {
    this._call = call;
  }

  get multiRequests(): Array<MultiAttestCallMultiRequestsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MultiAttestCallMultiRequestsStruct
    >();
  }
}

export class MultiAttestCall__Outputs {
  _call: MultiAttestCall;

  constructor(call: MultiAttestCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class MultiAttestCallMultiRequestsStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): Array<MultiAttestCallMultiRequestsDataStruct> {
    return this[1].toTupleArray<MultiAttestCallMultiRequestsDataStruct>();
  }
}

export class MultiAttestCallMultiRequestsDataStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get expirationTime(): BigInt {
    return this[1].toBigInt();
  }

  get revocable(): boolean {
    return this[2].toBoolean();
  }

  get refUID(): Bytes {
    return this[3].toBytes();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }

  get value(): BigInt {
    return this[5].toBigInt();
  }
}

export class MultiAttestByDelegationCall extends ethereum.Call {
  get inputs(): MultiAttestByDelegationCall__Inputs {
    return new MultiAttestByDelegationCall__Inputs(this);
  }

  get outputs(): MultiAttestByDelegationCall__Outputs {
    return new MultiAttestByDelegationCall__Outputs(this);
  }
}

export class MultiAttestByDelegationCall__Inputs {
  _call: MultiAttestByDelegationCall;

  constructor(call: MultiAttestByDelegationCall) {
    this._call = call;
  }

  get multiDelegatedRequests(): Array<
    MultiAttestByDelegationCallMultiDelegatedRequestsStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      MultiAttestByDelegationCallMultiDelegatedRequestsStruct
    >();
  }
}

export class MultiAttestByDelegationCall__Outputs {
  _call: MultiAttestByDelegationCall;

  constructor(call: MultiAttestByDelegationCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class MultiAttestByDelegationCallMultiDelegatedRequestsStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): Array<
    MultiAttestByDelegationCallMultiDelegatedRequestsDataStruct
  > {
    return this[1].toTupleArray<
      MultiAttestByDelegationCallMultiDelegatedRequestsDataStruct
    >();
  }

  get signatures(): Array<
    MultiAttestByDelegationCallMultiDelegatedRequestsSignaturesStruct
  > {
    return this[2].toTupleArray<
      MultiAttestByDelegationCallMultiDelegatedRequestsSignaturesStruct
    >();
  }

  get attester(): Address {
    return this[3].toAddress();
  }
}

export class MultiAttestByDelegationCallMultiDelegatedRequestsDataStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get expirationTime(): BigInt {
    return this[1].toBigInt();
  }

  get revocable(): boolean {
    return this[2].toBoolean();
  }

  get refUID(): Bytes {
    return this[3].toBytes();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }

  get value(): BigInt {
    return this[5].toBigInt();
  }
}

export class MultiAttestByDelegationCallMultiDelegatedRequestsSignaturesStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }
}

export class MultiRevokeCall extends ethereum.Call {
  get inputs(): MultiRevokeCall__Inputs {
    return new MultiRevokeCall__Inputs(this);
  }

  get outputs(): MultiRevokeCall__Outputs {
    return new MultiRevokeCall__Outputs(this);
  }
}

export class MultiRevokeCall__Inputs {
  _call: MultiRevokeCall;

  constructor(call: MultiRevokeCall) {
    this._call = call;
  }

  get multiRequests(): Array<MultiRevokeCallMultiRequestsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MultiRevokeCallMultiRequestsStruct
    >();
  }
}

export class MultiRevokeCall__Outputs {
  _call: MultiRevokeCall;

  constructor(call: MultiRevokeCall) {
    this._call = call;
  }
}

export class MultiRevokeCallMultiRequestsStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): Array<MultiRevokeCallMultiRequestsDataStruct> {
    return this[1].toTupleArray<MultiRevokeCallMultiRequestsDataStruct>();
  }
}

export class MultiRevokeCallMultiRequestsDataStruct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MultiRevokeByDelegationCall extends ethereum.Call {
  get inputs(): MultiRevokeByDelegationCall__Inputs {
    return new MultiRevokeByDelegationCall__Inputs(this);
  }

  get outputs(): MultiRevokeByDelegationCall__Outputs {
    return new MultiRevokeByDelegationCall__Outputs(this);
  }
}

export class MultiRevokeByDelegationCall__Inputs {
  _call: MultiRevokeByDelegationCall;

  constructor(call: MultiRevokeByDelegationCall) {
    this._call = call;
  }

  get multiDelegatedRequests(): Array<
    MultiRevokeByDelegationCallMultiDelegatedRequestsStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      MultiRevokeByDelegationCallMultiDelegatedRequestsStruct
    >();
  }
}

export class MultiRevokeByDelegationCall__Outputs {
  _call: MultiRevokeByDelegationCall;

  constructor(call: MultiRevokeByDelegationCall) {
    this._call = call;
  }
}

export class MultiRevokeByDelegationCallMultiDelegatedRequestsStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): Array<
    MultiRevokeByDelegationCallMultiDelegatedRequestsDataStruct
  > {
    return this[1].toTupleArray<
      MultiRevokeByDelegationCallMultiDelegatedRequestsDataStruct
    >();
  }

  get signatures(): Array<
    MultiRevokeByDelegationCallMultiDelegatedRequestsSignaturesStruct
  > {
    return this[2].toTupleArray<
      MultiRevokeByDelegationCallMultiDelegatedRequestsSignaturesStruct
    >();
  }

  get revoker(): Address {
    return this[3].toAddress();
  }
}

export class MultiRevokeByDelegationCallMultiDelegatedRequestsDataStruct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class MultiRevokeByDelegationCallMultiDelegatedRequestsSignaturesStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }
}

export class MultiRevokeOffchainCall extends ethereum.Call {
  get inputs(): MultiRevokeOffchainCall__Inputs {
    return new MultiRevokeOffchainCall__Inputs(this);
  }

  get outputs(): MultiRevokeOffchainCall__Outputs {
    return new MultiRevokeOffchainCall__Outputs(this);
  }
}

export class MultiRevokeOffchainCall__Inputs {
  _call: MultiRevokeOffchainCall;

  constructor(call: MultiRevokeOffchainCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MultiRevokeOffchainCall__Outputs {
  _call: MultiRevokeOffchainCall;

  constructor(call: MultiRevokeOffchainCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MultiTimestampCall extends ethereum.Call {
  get inputs(): MultiTimestampCall__Inputs {
    return new MultiTimestampCall__Inputs(this);
  }

  get outputs(): MultiTimestampCall__Outputs {
    return new MultiTimestampCall__Outputs(this);
  }
}

export class MultiTimestampCall__Inputs {
  _call: MultiTimestampCall;

  constructor(call: MultiTimestampCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MultiTimestampCall__Outputs {
  _call: MultiTimestampCall;

  constructor(call: MultiTimestampCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RevokeCall extends ethereum.Call {
  get inputs(): RevokeCall__Inputs {
    return new RevokeCall__Inputs(this);
  }

  get outputs(): RevokeCall__Outputs {
    return new RevokeCall__Outputs(this);
  }
}

export class RevokeCall__Inputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }

  get request(): RevokeCallRequestStruct {
    return changetype<RevokeCallRequestStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class RevokeCall__Outputs {
  _call: RevokeCall;

  constructor(call: RevokeCall) {
    this._call = call;
  }
}

export class RevokeCallRequestStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): RevokeCallRequestDataStruct {
    return changetype<RevokeCallRequestDataStruct>(this[1].toTuple());
  }
}

export class RevokeCallRequestDataStruct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class RevokeByDelegationCall extends ethereum.Call {
  get inputs(): RevokeByDelegationCall__Inputs {
    return new RevokeByDelegationCall__Inputs(this);
  }

  get outputs(): RevokeByDelegationCall__Outputs {
    return new RevokeByDelegationCall__Outputs(this);
  }
}

export class RevokeByDelegationCall__Inputs {
  _call: RevokeByDelegationCall;

  constructor(call: RevokeByDelegationCall) {
    this._call = call;
  }

  get delegatedRequest(): RevokeByDelegationCallDelegatedRequestStruct {
    return changetype<RevokeByDelegationCallDelegatedRequestStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class RevokeByDelegationCall__Outputs {
  _call: RevokeByDelegationCall;

  constructor(call: RevokeByDelegationCall) {
    this._call = call;
  }
}

export class RevokeByDelegationCallDelegatedRequestStruct extends ethereum.Tuple {
  get schema(): Bytes {
    return this[0].toBytes();
  }

  get data(): RevokeByDelegationCallDelegatedRequestDataStruct {
    return changetype<RevokeByDelegationCallDelegatedRequestDataStruct>(
      this[1].toTuple()
    );
  }

  get signature(): RevokeByDelegationCallDelegatedRequestSignatureStruct {
    return changetype<RevokeByDelegationCallDelegatedRequestSignatureStruct>(
      this[2].toTuple()
    );
  }

  get revoker(): Address {
    return this[3].toAddress();
  }
}

export class RevokeByDelegationCallDelegatedRequestDataStruct extends ethereum.Tuple {
  get uid(): Bytes {
    return this[0].toBytes();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class RevokeByDelegationCallDelegatedRequestSignatureStruct extends ethereum.Tuple {
  get v(): i32 {
    return this[0].toI32();
  }

  get r(): Bytes {
    return this[1].toBytes();
  }

  get s(): Bytes {
    return this[2].toBytes();
  }
}

export class RevokeOffchainCall extends ethereum.Call {
  get inputs(): RevokeOffchainCall__Inputs {
    return new RevokeOffchainCall__Inputs(this);
  }

  get outputs(): RevokeOffchainCall__Outputs {
    return new RevokeOffchainCall__Outputs(this);
  }
}

export class RevokeOffchainCall__Inputs {
  _call: RevokeOffchainCall;

  constructor(call: RevokeOffchainCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RevokeOffchainCall__Outputs {
  _call: RevokeOffchainCall;

  constructor(call: RevokeOffchainCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TimestampCall extends ethereum.Call {
  get inputs(): TimestampCall__Inputs {
    return new TimestampCall__Inputs(this);
  }

  get outputs(): TimestampCall__Outputs {
    return new TimestampCall__Outputs(this);
  }
}

export class TimestampCall__Inputs {
  _call: TimestampCall;

  constructor(call: TimestampCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class TimestampCall__Outputs {
  _call: TimestampCall;

  constructor(call: TimestampCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
